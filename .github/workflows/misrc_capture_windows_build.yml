name: "Build Windows Release"

on:
  workflow_dispatch:
  push:
    tags:
      - "misrc_capture-*"

env:
  ARCHIVE_NAME_WINDOWS: ${{ github.ref_name }}-win-x86_64.zip

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            git
            zip
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-flac
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-tools-git
            make

      - name: Setup hsdaoh environment from pre-built binaries
        run: |
          # Create hsdaoh directory structure for CMake
          mkdir -p hsdaoh_deps/lib
          mkdir -p hsdaoh_deps/include
          
          # Copy pre-built hsdaoh library
          cp windows-binaries/libhsdaoh.dll hsdaoh_deps/lib/
          
          # For MinGW, we need to create an import library from the DLL
          # Use gendef to extract the exports from the DLL
          gendef windows-binaries/libhsdaoh.dll
          
          # Create import library using dlltool with proper flags
          dlltool --kill-at --input-def libhsdaoh.def --output-lib hsdaoh_deps/lib/libhsdaoh.dll.a --dllname libhsdaoh.dll
          
          # Verify files were created
          ls -la hsdaoh_deps/lib/
          ls -la hsdaoh_deps/include/
          
          # Copy the correct hsdaoh.h header from windows-binaries
          cp windows-binaries/include/hsdaoh.h hsdaoh_deps/include/hsdaoh.h
          
          # Set environment for CMake
          echo "HSDAOH_ROOT=$(pwd)/hsdaoh_deps" >> $GITHUB_ENV

      - name: Download pcm_extract v1.0.0
        shell: pwsh
        run: |
          Invoke-WebRequest "https://github.com/namazso/pcm_extract/releases/download/v1.0.0/pcm_extract.exe" -OutFile .\pcm_extract.exe

      - name: Build MISRC tools from source
        run: |
          cd misrc_tools
          mkdir build && cd build
          
          # Debug environment variables
          echo "HSDAOH_ROOT: $HSDAOH_ROOT"
          echo "Contents of HSDAOH_ROOT:"
          ls -la "$HSDAOH_ROOT" || echo "HSDAOH_ROOT directory not found"
          ls -la "$HSDAOH_ROOT/lib" || echo "HSDAOH_ROOT/lib directory not found"
          ls -la "$HSDAOH_ROOT/include" || echo "HSDAOH_ROOT/include directory not found"
          
          # Configure with hsdaoh library
          cmake .. -G "Ninja" \
            -DCMAKE_PREFIX_PATH="${HSDAOH_ROOT}" \
            -DHSDAOH_LIBRARY="${HSDAOH_ROOT}/lib/libhsdaoh.dll.a" \
            -DHSDAOH_INCLUDE_DIR="${HSDAOH_ROOT}/include" \
            -DCMAKE_VERBOSE_MAKEFILE=ON
          
          # Build the tools
          ninja misrc_capture misrc_extract
          
          # Verify build outputs
          ls -la misrc_capture.exe misrc_extract.exe

      - name: Create binary archive
        run: |
          # Create bundle directory 
          mkdir -p bundle
          
          # Copy freshly built MISRC tools
          cp misrc_tools/build/misrc_capture.exe bundle/
          cp misrc_tools/build/misrc_extract.exe bundle/
          
          # Copy pre-built dependency DLLs (not the old misrc_capture.exe)
          cp windows-binaries/libhsdaoh.dll bundle/
          cp windows-binaries/libuvc.dll bundle/
          cp windows-binaries/libusb-1.0.dll bundle/
          cp windows-binaries/libFLAC.dll bundle/
          cp windows-binaries/libogg-0.dll bundle/
          cp windows-binaries/libwinpthread-1.dll bundle/
          cp windows-binaries/zadig-2.9.exe bundle/
          
          # Copy pcm_extract.exe
          cp pcm_extract.exe bundle/ || true
          
          # List what we have
          ls -la bundle/
          
          # Create the archive 
          cd bundle
          zip -r ../${{ env.ARCHIVE_NAME_WINDOWS }} *
          cd ..

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: misrc_capture-windows
          path: ${{ env.ARCHIVE_NAME_WINDOWS }}
          if-no-files-found: error
